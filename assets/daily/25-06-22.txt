======================================================================================
=================================================================== 25/06/22 - Sábado.
INÍCIO - 14:40 =======================================================================
======================================================================================
QQQ

ETAPA: post/participants

01. Receber um novo participante pelo body da request. -OK
    - lembrar de usar o JSON parser do express para que ele consiga fazer a leitura
      da infomação recebida no envio para o servidor. -ok
    - usar o ThunderClient para verificar se o servidor está funcionando. -ok
      basta simular o envio de um body pela requisição "POST". -ok
    - retornar o status 201 em caso de sucesso. -ok
    - instalar a biblioteca "joi" para validação -ok
    - criar o "validationSchema" para validação -ok

======================================================================================
PAUSA - 15:33 ========================================================================
======================================================================================
VOLTA - 15:54 ========================================================================
======================================================================================

02. Salvar a informação do novo participante no banco de dados. -OK
    - inicializar o mongo dentro do projeto -ok
    - inicializar o banco de dados com o MongoClient, atribuindo um nome qualquer -ok
    - realizar a operação de salvar a informação EM UMA COLEÇÃO no banco de dados -ok
        db = "uolDataBase"
        db.collection = "participants"

======================================================================================
PAUSA - 16:37 ========================================================================
======================================================================================
TOTAL - 01:10

!PENDENTE 
    - passar a informação de conexão com o mongo para uma variável de ambient
        - usar .env

!PRÓXIMO  
    - verificar se já existe um participante com o nome de entrada e impedir
      a entrada caso já exista. 
        - vou precisar vasculhar o banco de dados e retornar
          um true ou um false dependendo do que acontecer. lembrando que sempre que eu
          faço uma requisição para o banco de dados, eu tô lidando com uma promise.